import {
    useEffect
} from 'react';
/**
 * Triggers a function when clicking outside a DOM element.
 *
 * @param {RefObject} ref - Reference object that we want to monitor for clicking outside
 * @param {(event: TouchEvent | MouseEvent) => void} handler - Handler function
 * to be run when a click is detected outside of the reference object (i.e ref)
 * @returns void
 */
export default (function(refs, handler) {
    useEffect(function() {
        var listener = function(event) {
            if (refs.every(function(ref) {
                    return !(ref === null || ref === void 0 ? void 0 : ref.current);
                })) {
                return;
            }
            if (refs.findIndex(function(ref) {
                    var _a;
                    if (event.target instanceof Node) {
                        return (_a = ref === null || ref === void 0 ? void 0 : ref.current) === null || _a === void 0 ? void 0 : _a.contains(event.target);
                    }
                    return false;
                }) > -1) {
                return;
            }
            handler(event);
        };
        document.addEventListener('mousedown', listener);
        document.addEventListener('touchstart', listener);
        return function() {
            document.removeEventListener('mousedown', listener);
            document.removeEventListener('touchstart', listener);
        };
    }, [refs, handler]);
});