import {
    useEffect,
    useState
} from 'react';
/**
 * Return the debounced input value to prevent frequently updated.
 *
 * @param value - Value to be debounced
 * @param {number} delay - Delay of the debounce in ms
 * @returns the debouned input value based on the given delay
 */
export default (function(value, delay) {
    var _a = useState(value),
        debouncedValue = _a[0],
        setDebouncedValue = _a[1];
    useEffect(function() {
        var handler = setTimeout(function() {
            setDebouncedValue(value);
        }, delay);
        return function() {
            clearTimeout(handler);
        };
    }, [value, delay]);
    return debouncedValue;
});