var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import {
    DefaultProcessBatchWaitTime
} from './batchRequestConstants';
import {
    createExponentialBackoffCooldown
} from './batchRequestUtil';
import BatchRequestProcessor from './batchRequestProcessor';
var BatchRequestProcessorFactory = /** @class */ (function() {
    function BatchRequestProcessorFactory() {
        this.createExponentialBackoffCooldown = createExponentialBackoffCooldown;
        this.createQueueProcessor = function(itemsProcessor, itemSerializer, properties) {
            var batchRequestProcessor = new BatchRequestProcessor();
            return {
                queueItem: function(item) {
                    return batchRequestProcessor.queueItem(item, itemsProcessor, itemSerializer, properties);
                },
                invalidateItem: function(item) {
                    return batchRequestProcessor.invalidateItem(item, itemSerializer);
                }
            };
        };
    }
    BatchRequestProcessorFactory.prototype.createRequestProcessor = function(itemsProcessor, itemSerializer, properties) {
        var batchProperties = __assign({}, properties);
        if (!batchProperties.processBatchWaitTime) {
            batchProperties.processBatchWaitTime = DefaultProcessBatchWaitTime;
        }
        return this.createQueueProcessor(itemsProcessor, itemSerializer, batchProperties);
    };
    return BatchRequestProcessorFactory;
}());
export default BatchRequestProcessorFactory;